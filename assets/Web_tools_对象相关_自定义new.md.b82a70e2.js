import{_ as s,c as n,o as a,d as l}from"./app.c282a12f.js";const A=JSON.parse('{"title":"new","description":"","frontmatter":{},"headers":[{"level":2,"title":"01-概述","slug":"_01-概述","link":"#_01-概述","children":[]},{"level":2,"title":"02-代码实现","slug":"_02-代码实现","link":"#_02-代码实现","children":[]}],"relativePath":"Web/tools/对象相关/自定义new.md"}'),o={name:"Web/tools/对象相关/自定义new.md"},p=l(`<h1 id="new" tabindex="-1">new <a class="header-anchor" href="#new" aria-hidden="true">#</a></h1><h2 id="_01-概述" tabindex="-1">01-概述 <a class="header-anchor" href="#_01-概述" aria-hidden="true">#</a></h2><ul><li>创建Fn构造函数的实例对象</li></ul><h2 id="_02-代码实现" tabindex="-1">02-代码实现 <a class="header-anchor" href="#_02-代码实现" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">newInstance</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Fn</span><span style="color:#89DDFF;">,...</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 创建一个空对象</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">obj</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 将对象和构造函数通过原型链连接起来</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">__proto__</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Fn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 将构造函数的this指向新对象</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Fn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">obj</span><span style="color:#89DDFF;">,...</span><span style="color:#A6ACCD;">args</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 根据返回值判断返回的信息</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">instanceof</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">?</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">obj</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,5),e=[p];function t(c,r,y,F,i,D){return a(),n("div",null,e)}const C=s(o,[["render",t]]);export{A as __pageData,C as default};
