import{_ as i,c as l,o as t,d as e}from"./app.c282a12f.js";const m=JSON.parse('{"title":"Git","description":"","frontmatter":{},"headers":[{"level":2,"title":"01-Git发生冲突的场景","slug":"_01-git发生冲突的场景","link":"#_01-git发生冲突的场景","children":[]},{"level":2,"title":"02-Git常用命令","slug":"_02-git常用命令","link":"#_02-git常用命令","children":[]}],"relativePath":"Web/interview/前端工具/Git.md"}'),a={name:"Web/interview/前端工具/Git.md"},r=e('<h1 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-hidden="true">#</a></h1><h2 id="_01-git发生冲突的场景" tabindex="-1">01-Git发生冲突的场景 <a class="header-anchor" href="#_01-git发生冲突的场景" aria-hidden="true">#</a></h2><ol><li>概述 <ul><li>场景：一般是两个人同时更改了同一文件的同一地方，这时合并就会报冲突</li><li>解决：将合并失败的文件手动编辑为我们希望的内容，再提交</li></ul></li></ol><h2 id="_02-git常用命令" tabindex="-1">02-Git常用命令 <a class="header-anchor" href="#_02-git常用命令" aria-hidden="true">#</a></h2><ol><li>配置 <ul><li>git config --global <a href="http://user.name" target="_blank" rel="noreferrer">user.name</a> &quot;[name]&quot;</li><li>git config --global user.email &quot;[email]&quot;</li></ul></li><li>启动 <ul><li>git init：初始化git代码库</li><li>git clone url：下载一个项目和它的整个代码历史</li></ul></li><li>日常基本操作 <ul><li>git add .：提交全部文件修改到暂存区</li><li>git status：查看当前分支状态</li><li>git commit -m &quot;注释&quot;：提交代码到本地仓库，并提交注释</li><li>git commit -v：提交时显示所有diff信息</li><li>git pull &lt;远程仓库名&gt;&lt;远程分支名&gt;：拉取远程仓库的分支与本地当前分支合并</li><li>git pull &lt;远程仓库名&gt;&lt;远程分支名&gt;:&lt;本地分支名&gt;：拉取远程仓库的分支与本地某个分支合并</li><li>提交注释信息的格式规则： <ul><li>feat：新特性，添加功能</li><li>fix：修改bug</li><li>refactor：代码重构</li><li>docs：文档修改</li><li>style：代码格式修改</li><li>test：测试用例修改</li><li>chore：其他修改，如构建按流程、依赖管理</li></ul></li></ul></li><li>分支操作 <ul><li>git branch：查看本地所有分支</li><li>git branch -r：查看远程所有分支</li><li>git branch -a：查看本地和远程所有分支</li><li>git branch &lt;新分支名&gt;：新建分支</li><li>git branch -D &lt;分支名&gt;：删除本地某个分支</li><li>git merge &lt;分支名&gt;：合并分支</li><li>git merge --abort：合并分支出现冲突，取消合并，一切回到合并前的状态</li><li>git checkout &lt;分支名&gt;：切换到本地某个分支</li><li>git checkout &lt;远程库名&gt;/&lt;分支名&gt;：切换到线上某个分支</li><li>git checkout -b &lt;新分支名&gt;：新建分支，并切换到新分支</li></ul></li><li>远程同步 <ul><li>git remote -v： 查看远程版本库信息</li><li>git remote show &lt; remote &gt;：查看指定远程版本库信息</li></ul></li><li>撤销 <ul><li>git checkout [file]：恢复暂存区的指定文件到工作区</li><li>git checkout .：恢复暂存区的所有文件到工作区</li><li>git reset --hard：重置暂存区与工作区，与上一次commit保持一致</li><li>git revert [commit]：后者的所有变化都将被前者低效，并且应用到分支</li></ul></li></ol>',5),g=[r];function o(c,n,u,h,s,_){return t(),l("div",null,g)}const f=i(a,[["render",o]]);export{m as __pageData,f as default};
